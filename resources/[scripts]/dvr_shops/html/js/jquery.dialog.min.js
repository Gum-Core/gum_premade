"use strict";
! function (i) {
    window.dialog = {
        defaultParams: {
            title: "",
            message: "",
            button: "Ok",
            cancel: "Cancel",
            item: "",
            type: "",
            required: !1,
            select: !1,
            position: "fixed",
            animation: "scale",
            input: {
                type: "text"
            },
            validate: function (i, a, l) { },
            callback: function (i) { }
        },
        transitionEnd: "transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd",
        alert: function (a) {
            dialog.appendDialogHolder();
            a = i.extend(!0, {}, dialog.defaultParams, a);
            var l = dialog.generateRandomId(),
                o = '<div class="dialog-alert" id="' + l + '">';
            o += '<div class="dialog-border"></div>', o += '<div class="dialog-title">' + a.title + "</div>", o += '<div class="dialog-message">' + a.message + "</div>", o += '<div class="dialog-close">&times;</div>', o += '<div class="dialog-confirm">' + a.button + "</div>", o += '<div class="dialog-clearFloat"></div>', o += "</div>", dialog.holder.find("td").append(o);
            var d = i("#" + l),
                e = d.find(".dialog-confirm"),
                n = d.find(".dialog-close");
            !0 === a.required && n.remove(), d.attr("data-dialog-position", a.position), d.attr("data-dialog-animation", a.animation), dialog.injectDialog(), e.one("click.dialog", function () {
                a.callback(!0)
            }), n.one("click.dialog", function () {
                a.callback(null)
            })
        },
        prompt: function (a) {
            dialog.appendDialogHolder();
            a = i.extend(!0, {}, dialog.defaultParams, a);
            var l = dialog.generateRandomId(),
                o = "";
            for (var d in a.input) o += " " + d + '="' + a.input[d] + '" ';
            var e = '<div class="dialog-alert" id="' + l + '">';
            e += '<div class="dialog-border"></div>', e += '<div class="dialog-title">' + a.title + "</div>", e += '<div class="dialog-message">' + a.message + "</div>", a.select ? a.item.players.forEach(function (i) {
                e += '<div class="select" data-player="' + i.player + '">' + i.label + "</div>"
            }) : e += "<label><input " + o + " /></label>", e += '<div class="dialog-close">&times;</div>', a.select || (e += '<div class="dialog-confirm">' + a.button + "</div>"), e += '<div class="dialog-clearFloat"></div>', e += "</div>", dialog.holder.find("td").append(e);
            var n = i("#" + l);
            if (a.select) t = n.find(".select");
            else var t = n.find(".dialog-confirm");
            var s = n.find(".dialog-close"),
                g = n.find("input");
            !0 === a.required && s.remove(), n.attr("data-dialog-position", a.position), n.attr("data-dialog-animation", a.animation), dialog.injectDialog(), t.bind("click.dialog", function () {
                var l = g.val();
                if (a.select) o = !1 !== a.validate(l, a.item, i(this).data("player"));
                else var o = !1 !== a.validate(l, a.item, a.type);
                if (!0 === a.required && "" === l && (o = !1), !o) return n.one("webkitAnimationEnd oanimationend msAnimationEnd animationend", function (i) {
                    n.removeClass("dialog-shaking")
                }).addClass("dialog-shaking"), !1;
                a.callback(l)
            }), s.one("click.dialog", function () {
                a.callback(null)
            })
        },
        confirm: function (a) {
            dialog.appendDialogHolder();
            a = i.extend(!0, {}, dialog.defaultParams, a);
            var l = dialog.generateRandomId(),
                o = '<div class="dialog-alert" id="' + l + '">';
            o += '<div class="dialog-border"></div>', o += '<div class="dialog-title">' + a.title + "</div>", o += '<div class="dialog-message">' + a.message + "</div>", o += '<div class="dialog-close">&times;</div>', o += '<div class="dialog-cancel">' + a.cancel + "</div>", o += '<div class="dialog-confirm">' + a.button + "</div>", o += '<div class="dialog-clearFloat"></div>', o += "</div>", dialog.holder.find("td").append(o);
            var d = i("#" + l),
                e = d.find(".dialog-confirm"),
                n = d.find(".dialog-cancel"),
                t = d.find(".dialog-close");
            !0 === a.required && t.remove(), d.attr("data-dialog-position", a.position), d.attr("data-dialog-animation", a.animation), dialog.injectDialog(), e.one("click.dialog", function () {
                a.callback(!0)
            }), n.one("click.dialog", function () {
                a.callback(!1)
            }), t.one("click.dialog", function () {
                a.callback(null)
            })
        },
        generateRandomId: function () {
            return Math.floor(1e6 * Math.random()) + 1 + (new Date).getTime()
        },
        showDialog: function () {
            i(":focus").blur();
            var a = i(".dialog-alert:first");
            "absolute" === a.attr("data-dialog-position") ? (dialog.holder.removeClass("dialog-fixed"), dialog.holder.css("top", i(window).scrollTop())) : (dialog.holder.addClass("dialog-fixed"), dialog.holder.css("top", "")), i(window).trigger("resize.dialog"), i(".dialog-alert").hide(), a.show(), setTimeout(function () {
                a.bind(dialog.transitionEnd, function (l) {
                    i(l.target).is(this) && (a.unbind(dialog.transitionEnd), dialog.focusElement(a.find("input")[0], !0))
                }).addClass("dialog-visible")
            }, 1), i("html").addClass("dialogIsVisible")
        },
        injectDialog: function () {
            0 === i(".dialog-alert:visible").length ? dialog.showDialog() : i(".dialog-alert:last").hide(), dialog.overlay.addClass("dialog-visible")
        },
        focusElement: function (a, l) {
            a && (i(a).one("blur.dialog", function () {
                dialog.focusElement(a, !1)
            }), a.focus(), l && (a.scrollLeft = a.scrollWidth))
        },
        appendDialogHolder: function () {
            dialog.holder || (i("body").append('<div id="dialog-overlay"></div><div id="dialog-holder"><table id="dialog-center"><tr><td></td></tr></table></div>'), dialog.overlay = i("#dialog-overlay"), dialog.holder = i("#dialog-holder"), dialog.bindDialogGlobalEvents(), i("html").addClass("dialogHolderIsVisible"))
        },
        removeDialogHolder: function () {
            dialog.unbindDialogGlobalEvents(), dialog.overlay.remove(), dialog.holder.remove(), dialog.overlay = void 0, dialog.holder = void 0, i("html").removeClass("dialogHolderIsVisible")
        },
        close: function () {
            var a = i(".dialog-alert:not(.dialog-closing):first");
            a.addClass("dialog-closing").bind(dialog.transitionEnd, function (l) {
                i(l.target).is(this) && (a.unbind(dialog.transitionEnd), a.remove(), i("html").removeClass("dialogIsVisible"), 0 === i(".dialog-alert").length ? dialog.overlay.addClass("dialog-closing").bind(dialog.transitionEnd, function (a) {
                    i(a.target).is(this) && (dialog.overlay.unbind(dialog.transitionEnd), dialog.removeDialogHolder())
                }).removeClass("dialog-visible") : dialog.showDialog())
            }).removeClass("dialog-visible")
        },
        bindDialogGlobalEvents: function () {
            dialog.holder.add(dialog.overlay).bind("click.dialog", function (a) {
                i(a.target).closest(".dialog-alert").is(".dialog-alert") || i(".dialog-close:visible").trigger("click")
            }), i(document).on("click.dialog", ".dialog-confirm, .dialog-cancel, .dialog-close, .select", function (i) {
                return dialog.close(), !1
            }), i(document).bind("keyup.dialog", function (a) {
                27 == a.keyCode && i(".dialog-alert").is(":visible") && i(".dialog-close:visible").trigger("click")
            }), i(document).bind("keydown.dialog", function (a) {
                var l = i(".dialog-alert:visible");
                if (0 !== l.length) return 13 == 12 ? (l.find(".dialog-confirm").trigger("click"), !1) : void 0
            }), i(window).bind("resize.dialog", function () {
                dialog.overlay.height("100%"), dialog.overlay.height(i(document).height())
            })
        },
        unbindDialogGlobalEvents: function () {
            dialog.overlay.off(".dialog"), dialog.holder.off(".dialog"), i(document).off(".dialog"), i(window).off(".dialog")
        }
    }
}(jQuery);